{"ast":null,"code":"var _jsxFileName = \"/Users/ecem/Documents/INTERNSHIP/2021 SUMMER/JOTFORM/ocr-logo-detection/frontend/src/components/SaveOcrResultButton/SaveOcrResultButton.js\";\nimport React, { Component } from 'react';\nimport { Dropdown } from 'primereact/dropdown';\nimport './SaveOcrResultButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SaveOcrResultButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelectionChange = e => {\n      this.createFile(e.value.type, e.value.extension); // this.downloadFile(e.value.extension)\n    };\n\n    this.createFile = (fileType, fileExtension) => {\n      // const data = new Blob([\"fghhkjg\"], {type: fileType})\n      // URL.revokeObjectURL(this.state.downloadLink)\n      // this.setState({downloadLink: URL.createObjectURL(data)})\n      // base64 string\n      var base64str = \"lelelelelele\"; // decode base64 string, remove space for IE compatibility\n\n      var binary = atob(base64str.replace(/\\s/g, ''));\n      var len = binary.length;\n      var buffer = new ArrayBuffer(len);\n      var view = new Uint8Array(buffer);\n\n      for (var i = 0; i < len; i++) {\n        view[i] = binary.charCodeAt(i);\n      }\n\n      const element = document.createElement(\"a\");\n      const data = new Blob([\"fghhkjg\"], {\n        type: fileType\n      });\n      element.href = URL.createObjectURL(data);\n      window.open(element.href);\n      element.download = \"ocrresult\".concat(fileExtension);\n      document.body.appendChild(element); // Required for this to work in FireFox\n\n      element.click();\n      element.remove();\n    };\n\n    this.downloadFile = fileExtension => {\n      const a = document.createElement('a');\n      a.href = this.state.downloadLink;\n      a.download = \"ocrresult\".concat(fileExtension);\n      document.body.appendChild(a);\n      a.click();\n    };\n\n    this.items = [{\n      label: 'Plain Text (txt)',\n      extension: '.txt',\n      type: 'text/plain'\n    }, {\n      label: 'Portable Document (pdf)',\n      extension: '.pdf',\n      type: 'application/pdf'\n    }, {\n      label: 'Microsoft Word (docx)',\n      extension: '.docx',\n      type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    }, {\n      label: 'OpenOffice (odf)',\n      extension: '.odf',\n      type: 'application/vnd.oasis.opendocument.text'\n    }];\n    this.state = {\n      downloadLink: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        placeholder: \"Download\",\n        options: this.items,\n        optionlabel: \"label\",\n        onChange: this.onSelectionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ecem/Documents/INTERNSHIP/2021 SUMMER/JOTFORM/ocr-logo-detection/frontend/src/components/SaveOcrResultButton/SaveOcrResultButton.js"],"names":["React","Component","Dropdown","SaveOcrResultButton","constructor","props","onSelectionChange","e","createFile","value","type","extension","fileType","fileExtension","base64str","binary","atob","replace","len","length","buffer","ArrayBuffer","view","Uint8Array","i","charCodeAt","element","document","createElement","data","Blob","href","URL","createObjectURL","window","open","download","concat","body","appendChild","click","remove","downloadFile","a","state","downloadLink","items","label","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { Dropdown } from 'primereact/dropdown';\n\nimport './SaveOcrResultButton.css'\n\n\n\nexport default class SaveOcrResultButton extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.items = [\n            {\n                label: 'Plain Text (txt)',\n                extension: '.txt',\n                type: 'text/plain',\n            },\n            {\n                label: 'Portable Document (pdf)',\n                extension: '.pdf',\n                type: 'application/pdf'\n            },\n            {\n                label: 'Microsoft Word (docx)',\n                extension: '.docx',\n                type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n            },\n            {\n                label: 'OpenOffice (odf)',\n                extension: '.odf',\n                type: 'application/vnd.oasis.opendocument.text'\n            },\n        ];\n\n        this.state = {\n            downloadLink: \"\",\n        }\n    }\n\n    onSelectionChange = (e) => {\n        this.createFile(e.value.type, e.value.extension)\n        // this.downloadFile(e.value.extension)\n    }\n\n    createFile = (fileType, fileExtension) => {\n        // const data = new Blob([\"fghhkjg\"], {type: fileType})\n        // URL.revokeObjectURL(this.state.downloadLink)\n        // this.setState({downloadLink: URL.createObjectURL(data)})\n\n        // base64 string\nvar base64str = \"lelelelelele\";\n\n// decode base64 string, remove space for IE compatibility\nvar binary = atob(base64str.replace(/\\s/g, ''));\nvar len = binary.length;\nvar buffer = new ArrayBuffer(len);\nvar view = new Uint8Array(buffer);\nfor (var i = 0; i < len; i++) {\n    view[i] = binary.charCodeAt(i);\n}\n\n\n        const element = document.createElement(\"a\");\n        const data = new Blob([\"fghhkjg\"], {type: fileType})\n        element.href = URL.createObjectURL(data);\n        window.open(element.href)\n        element.download = \"ocrresult\".concat(fileExtension);\n        document.body.appendChild(element); // Required for this to work in FireFox\n        element.click()\n        element.remove()\n    }\n\n    downloadFile = (fileExtension) => {\n        const a = document.createElement('a');\n        \n\n        a.href = this.state.downloadLink;\n        a.download = \"ocrresult\".concat(fileExtension);\n\n        document.body.appendChild(a);\n        a.click();\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Dropdown placeholder=\"Download\" options={this.items} optionlabel=\"label\" onChange={this.onSelectionChange} />\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}