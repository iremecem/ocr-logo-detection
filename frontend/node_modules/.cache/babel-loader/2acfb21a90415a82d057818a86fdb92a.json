{"ast":null,"code":"var _jsxFileName = \"/Users/ecem/Documents/INTERNSHIP/2021 SUMMER/JOTFORM/ocr-logo-detection/frontend/src/components/SaveOcrResultButton/SaveOcrResultButton.js\";\nimport React, { Component } from 'react';\nimport { Dropdown } from 'primereact/dropdown';\nimport FileSaver from 'file-saver';\nimport './SaveOcrResultButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SaveOcrResultButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelectionChange = e => {\n      this.createFile(e.value.type, e.value.extension); // this.downloadFile(e.value.extension)\n    };\n\n    this.createFile = (fileType, fileExtension) => {\n      // const data = new Blob([\"fghhkjg\"], {type: fileType})\n      // URL.revokeObjectURL(this.state.downloadLink)\n      // this.setState({downloadLink: URL.createObjectURL(data)})\n      var data = new Blob([\"fghhkjg\"], {\n        type: 'application/pdf'\n      });\n      FileSaver.saveAs(blob, \"filename.pdf\"); // console.log(data)\n      // var downloadURL = (window.URL || window.webkitURL).createObjectURL(data)\n      // var name = \"ocrresult\" + fileExtension\n      // var element = document.createElement(\"a\");\n      // element.download = name\n      // element.href = downloadURL\n      // document.body.appendChild(element); // Required for this to work in FireFox\n      // element.click()\n      // document.body.removeChild(element)\n    };\n\n    this.downloadFile = fileExtension => {\n      const a = document.createElement('a');\n      a.href = this.state.downloadLink;\n      a.download = \"ocrresult\".concat(fileExtension);\n      document.body.appendChild(a);\n      a.click();\n    };\n\n    this.items = [{\n      label: 'Plain Text (txt)',\n      extension: '.txt',\n      type: 'text/plain'\n    }, {\n      label: 'Portable Document (pdf)',\n      extension: '.pdf',\n      type: 'application/pdf'\n    }, {\n      label: 'Microsoft Word (docx)',\n      extension: '.docx',\n      type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    }, {\n      label: 'OpenOffice (odf)',\n      extension: '.odf',\n      type: 'application/vnd.oasis.opendocument.text'\n    }];\n    this.state = {\n      downloadLink: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        placeholder: \"Download\",\n        options: this.items,\n        optionlabel: \"label\",\n        onChange: this.onSelectionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ecem/Documents/INTERNSHIP/2021 SUMMER/JOTFORM/ocr-logo-detection/frontend/src/components/SaveOcrResultButton/SaveOcrResultButton.js"],"names":["React","Component","Dropdown","FileSaver","SaveOcrResultButton","constructor","props","onSelectionChange","e","createFile","value","type","extension","fileType","fileExtension","data","Blob","saveAs","blob","downloadFile","a","document","createElement","href","state","downloadLink","download","concat","body","appendChild","click","items","label","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,2BAAP;;AAIA,eAAe,MAAMC,mBAAN,SAAkCH,SAAlC,CAA4C;AAEvDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA+BnBC,iBA/BmB,GA+BEC,CAAD,IAAO;AACvB,WAAKC,UAAL,CAAgBD,CAAC,CAACE,KAAF,CAAQC,IAAxB,EAA8BH,CAAC,CAACE,KAAF,CAAQE,SAAtC,EADuB,CAEvB;AACH,KAlCkB;;AAAA,SAoCnBH,UApCmB,GAoCN,CAACI,QAAD,EAAWC,aAAX,KAA6B;AACtC;AACA;AACA;AAGA,UAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAAC,SAAD,CAAT,EAAsB;AAACL,QAAAA,IAAI,EAAE;AAAP,OAAtB,CAAX;AACAR,MAAAA,SAAS,CAACc,MAAV,CAAiBC,IAAjB,EAAuB,cAAvB,EAPsC,CAQtC;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACH,KAvDkB;;AAAA,SAyDnBC,YAzDmB,GAyDHL,aAAD,IAAmB;AAC9B,YAAMM,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAV;AAGAF,MAAAA,CAAC,CAACG,IAAF,GAAS,KAAKC,KAAL,CAAWC,YAApB;AACAL,MAAAA,CAAC,CAACM,QAAF,GAAa,YAAYC,MAAZ,CAAmBb,aAAnB,CAAb;AAEAO,MAAAA,QAAQ,CAACO,IAAT,CAAcC,WAAd,CAA0BT,CAA1B;AACAA,MAAAA,CAAC,CAACU,KAAF;AAEH,KAnEkB;;AAGf,SAAKC,KAAL,GAAa,CACT;AACIC,MAAAA,KAAK,EAAE,kBADX;AAEIpB,MAAAA,SAAS,EAAE,MAFf;AAGID,MAAAA,IAAI,EAAE;AAHV,KADS,EAMT;AACIqB,MAAAA,KAAK,EAAE,yBADX;AAEIpB,MAAAA,SAAS,EAAE,MAFf;AAGID,MAAAA,IAAI,EAAE;AAHV,KANS,EAWT;AACIqB,MAAAA,KAAK,EAAE,uBADX;AAEIpB,MAAAA,SAAS,EAAE,OAFf;AAGID,MAAAA,IAAI,EAAE;AAHV,KAXS,EAgBT;AACIqB,MAAAA,KAAK,EAAE,kBADX;AAEIpB,MAAAA,SAAS,EAAE,MAFf;AAGID,MAAAA,IAAI,EAAE;AAHV,KAhBS,CAAb;AAuBA,SAAKa,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AADL,KAAb;AAGH;;AAyCDQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,WAAW,EAAC,UAAtB;AAAiC,QAAA,OAAO,EAAE,KAAKF,KAA/C;AAAsD,QAAA,WAAW,EAAC,OAAlE;AAA0E,QAAA,QAAQ,EAAE,KAAKxB;AAAzF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA9EsD","sourcesContent":["import React, { Component } from 'react'\n\nimport { Dropdown } from 'primereact/dropdown';\nimport FileSaver from 'file-saver';\n\nimport './SaveOcrResultButton.css'\n\n\n\nexport default class SaveOcrResultButton extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.items = [\n            {\n                label: 'Plain Text (txt)',\n                extension: '.txt',\n                type: 'text/plain',\n            },\n            {\n                label: 'Portable Document (pdf)',\n                extension: '.pdf',\n                type: 'application/pdf'\n            },\n            {\n                label: 'Microsoft Word (docx)',\n                extension: '.docx',\n                type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n            },\n            {\n                label: 'OpenOffice (odf)',\n                extension: '.odf',\n                type: 'application/vnd.oasis.opendocument.text'\n            },\n        ];\n\n        this.state = {\n            downloadLink: \"\",\n        }\n    }\n\n    onSelectionChange = (e) => {\n        this.createFile(e.value.type, e.value.extension)\n        // this.downloadFile(e.value.extension)\n    }\n\n    createFile = (fileType, fileExtension) => {\n        // const data = new Blob([\"fghhkjg\"], {type: fileType})\n        // URL.revokeObjectURL(this.state.downloadLink)\n        // this.setState({downloadLink: URL.createObjectURL(data)})\n\n        \n        var data = new Blob([\"fghhkjg\"], {type: 'application/pdf'})\n        FileSaver.saveAs(blob, \"filename.pdf\");\n        // console.log(data)\n        // var downloadURL = (window.URL || window.webkitURL).createObjectURL(data)\n        // var name = \"ocrresult\" + fileExtension\n\n        // var element = document.createElement(\"a\");\n        // element.download = name\n        // element.href = downloadURL\n        \n        // document.body.appendChild(element); // Required for this to work in FireFox\n        // element.click()\n        // document.body.removeChild(element)\n    }\n\n    downloadFile = (fileExtension) => {\n        const a = document.createElement('a');\n        \n\n        a.href = this.state.downloadLink;\n        a.download = \"ocrresult\".concat(fileExtension);\n\n        document.body.appendChild(a);\n        a.click();\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Dropdown placeholder=\"Download\" options={this.items} optionlabel=\"label\" onChange={this.onSelectionChange} />\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}