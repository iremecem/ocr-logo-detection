{"ast":null,"code":"var _jsxFileName = \"/Users/ecem/Documents/INTERNSHIP/2021 SUMMER/JOTFORM/ocr-logo-detection/frontend/src/pages/ScanResultPage/ScanResultPage.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button } from 'primereact/button';\nimport { SplitButton } from 'primereact/splitbutton';\nimport { Dropdown } from 'primereact/dropdown';\nimport OcrResultSkeleton from '../../components/OcrResultSkeleton/OcrResultSkeleton';\nimport { ButtonItems } from './ButtonItems';\nimport './ScanResultPage.css';\nimport SaveOcrResultButton from '../../components/SaveOcrResultButton/SaveOcrResultButton.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ScanResultPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getOcrResult = () => {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      let fd = new FormData();\n      fd.append('file', this.state.file);\n      axios.post('http://127.0.0.1:8000/ocr/', fd, config).then(response => {\n        console.log(response.data);\n        let ocrResult = response.data;\n        this.setState({\n          result: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.createTxtFile = () => {\n      const data = new Blob([this.state.result], {\n        type: 'text/plain'\n      });\n      URL.revokeObjectURL(this.state.downloadLink);\n      this.setState({\n        downloadLink: URL.createObjectURL(data)\n      });\n      console.log(this.state.downloadLink);\n    };\n\n    this.createWordxFile = () => {\n      const data = new Blob([this.state.result], {\n        type: 'application/msword'\n      });\n      URL.revokeObjectURL(this.state.downloadLink);\n      this.setState({\n        downloadLink: URL.createObjectURL(data)\n      });\n      console.log(this.state.downloadLink);\n    };\n\n    this.createWordFile = () => {\n      const data = new Blob([this.state.result], {\n        type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n      });\n      URL.revokeObjectURL(this.state.downloadLink);\n      this.setState({\n        downloadLink: URL.createObjectURL(data)\n      });\n      console.log(this.state.downloadLink);\n    };\n\n    console.log(props);\n    this.state = {\n      file: this.props.location.state.file,\n      preview: URL.createObjectURL(this.props.location.state.file),\n      result: \"\",\n      downloadLink: \"\",\n      downloadName: \"\",\n      downloadType: \"\"\n    };\n    this.items = [{\n      label: 'Update',\n      icon: 'pi pi-refresh',\n      type: 'text/plain',\n      command: () => {\n        const data = new Blob([this.state.result], {\n          type: 'text/plain'\n        });\n        URL.revokeObjectURL(this.state.downloadLink);\n        this.setState({\n          downloadLink: URL.createObjectURL(data)\n        });\n        console.log(this.state.downloadLink);\n      }\n    }, {\n      label: 'Delete',\n      icon: 'pi pi-times',\n      command: () => {\n        this.toast.show({\n          severity: 'success',\n          summary: 'Delete',\n          detail: 'Data Deleted'\n        });\n      }\n    }, {\n      label: 'React Website',\n      icon: 'pi pi-external-link',\n      command: () => {\n        window.location.href = 'https://facebook.github.io/react/';\n      }\n    }, {\n      label: 'Upload',\n      icon: 'pi pi-upload',\n      command: () => {\n        window.location.hash = \"/fileupload\";\n      }\n    }];\n  }\n\n  componentDidMount() {\n    this.getOcrResult();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"image\",\n        src: this.state.preview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), this.state.result ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display-linebreak\",\n        children: this.state.result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(OcrResultSkeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 101\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.createWordFile,\n        children: \"lele\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        download: \"lele.docx\",\n        href: this.state.downloadLink,\n        children: \"link is here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SaveOcrResultButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        value: \"lele\",\n        placeholder: \"Download\",\n        options: this.items,\n        optionlabel: \"label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ecem/Documents/INTERNSHIP/2021 SUMMER/JOTFORM/ocr-logo-detection/frontend/src/pages/ScanResultPage/ScanResultPage.js"],"names":["React","Component","axios","Button","SplitButton","Dropdown","OcrResultSkeleton","ButtonItems","SaveOcrResultButton","ScanResultPage","constructor","props","getOcrResult","config","headers","fd","FormData","append","state","file","post","then","response","console","log","data","ocrResult","setState","result","catch","error","createTxtFile","Blob","type","URL","revokeObjectURL","downloadLink","createObjectURL","createWordxFile","createWordFile","location","preview","downloadName","downloadType","items","label","icon","command","toast","show","severity","summary","detail","window","href","hash","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\nimport { Button } from 'primereact/button';\nimport { SplitButton } from 'primereact/splitbutton';\nimport { Dropdown } from 'primereact/dropdown';\n\nimport OcrResultSkeleton from '../../components/OcrResultSkeleton/OcrResultSkeleton'\nimport { ButtonItems } from './ButtonItems'\n\nimport './ScanResultPage.css'\n\nimport SaveOcrResultButton from '../../components/SaveOcrResultButton/SaveOcrResultButton.js'\n\nexport default class ScanResultPage extends Component {\n\n    constructor(props) {\n        super(props)\n        console.log(props)\n\n        this.state = {\n            file: this.props.location.state.file,\n            preview: URL.createObjectURL(this.props.location.state.file),\n            result: \"\",\n            downloadLink: \"\",\n            downloadName: \"\",\n            downloadType: \"\",\n        }\n\n        this.items = [{\n            label: 'Update',\n            icon: 'pi pi-refresh',\n            type: 'text/plain',\n            command: () => {\n                const data = new Blob([this.state.result], {type: 'text/plain'})\n                URL.revokeObjectURL(this.state.downloadLink)\n                this.setState({downloadLink: URL.createObjectURL(data)})\n                console.log(this.state.downloadLink)\n            }\n        },\n        {\n            label: 'Delete',\n            icon: 'pi pi-times',\n            command: () => {\n                this.toast.show({ severity: 'success', summary: 'Delete', detail: 'Data Deleted' });\n            }\n        },\n        {\n            label: 'React Website',\n            icon: 'pi pi-external-link',\n            command: () => {\n                window.location.href = 'https://facebook.github.io/react/'\n            }\n        },\n        {   label: 'Upload',\n            icon: 'pi pi-upload',\n            command: () => {\n                window.location.hash = \"/fileupload\"\n            }\n        }];\n    }\n\n    componentDidMount() {\n        this.getOcrResult();\n    }\n\n\n    getOcrResult = () => {\n        const config = { headers: { 'Content-Type': 'multipart/form-data' } };\n        let fd = new FormData();\n\n        fd.append('file', this.state.file)\n\n        axios.post('http://127.0.0.1:8000/ocr/', fd, config)\n          .then((response) => {\n            console.log(response.data);\n            let ocrResult = response.data;\n            this.setState({ result: response.data})\n          })\n          .catch(error => {\n              console.log(error);\n          })\n    }\n\n\n    createTxtFile = () => {\n        const data = new Blob([this.state.result], {type: 'text/plain'})\n        URL.revokeObjectURL(this.state.downloadLink)\n        this.setState({downloadLink: URL.createObjectURL(data)})\n        console.log(this.state.downloadLink)\n    }\n\n    createWordxFile = () => {\n        const data = new Blob([this.state.result], {type: 'application/msword'})\n        URL.revokeObjectURL(this.state.downloadLink)\n        this.setState({downloadLink: URL.createObjectURL(data)})\n        console.log(this.state.downloadLink)\n    }\n\n    createWordFile = () => {\n        const data = new Blob([this.state.result], {type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'})\n        URL.revokeObjectURL(this.state.downloadLink)\n        this.setState({downloadLink: URL.createObjectURL(data)})\n        console.log(this.state.downloadLink)\n    }\n\n    \n\n    render() {\n        return (\n            <div>\n                <img alt=\"image\"\n                    src={this.state.preview}\n                    />\n                {this.state.result ? <div className=\"display-linebreak\">{this.state.result}</div> : <OcrResultSkeleton/>}\n                <Button onClick={this.createWordFile}>lele</Button>\n                <a download='lele.docx' href={this.state.downloadLink}>link is here</a>\n                <SaveOcrResultButton/>\n                <Dropdown value=\"lele\" placeholder=\"Download\" options={this.items} optionlabel=\"label\" />\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}