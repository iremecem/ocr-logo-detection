{"ast":null,"code":"var _jsxFileName = \"/Users/ecem/Documents/INTERNSHIP/2021 SUMMER/JOTFORM/ocr-logo-detection/frontend/src/pages/ScanResultPage/ScanResultPage.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport OcrResultSkeleton from '../../components/OcrResultSkeleton/OcrResultSkeleton';\nimport './ScanResultPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ScanResultPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createTxtFile = () => {\n      const data = new Blob([this.state.result], {\n        type: 'text/plain'\n      });\n      URL.revok;\n    };\n\n    console.log(props);\n    this.state = {\n      file: this.props.location.state.file,\n      preview: URL.createObjectURL(this.props.location.state.file),\n      result: \"\",\n      downloadLink: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    let fd = new FormData();\n    fd.append('file', this.state.file);\n    axios.post('http://127.0.0.1:8000/ocr/', fd, config).then(response => {\n      console.log(response.data);\n      let ocrResult = response.data;\n      this.setState({\n        result: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"lele\",\n        src: this.state.preview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), this.state.result ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display-linebreak\",\n        children: this.state.result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(OcrResultSkeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 101\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ecem/Documents/INTERNSHIP/2021 SUMMER/JOTFORM/ocr-logo-detection/frontend/src/pages/ScanResultPage/ScanResultPage.js"],"names":["React","Component","axios","OcrResultSkeleton","ScanResultPage","constructor","props","createTxtFile","data","Blob","state","result","type","URL","revok","console","log","file","location","preview","createObjectURL","downloadLink","componentDidMount","config","headers","fd","FormData","append","post","then","response","ocrResult","setState","catch","error","render","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,iBAAP,MAA8B,sDAA9B;AAEA,OAAO,sBAAP;;AAEA,eAAe,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AAElDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,aAZmB,GAYH,MAAM;AAClB,YAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAAC,KAAKC,KAAL,CAAWC,MAAZ,CAAT,EAA8B;AAACC,QAAAA,IAAI,EAAE;AAAP,OAA9B,CAAb;AACAC,MAAAA,GAAG,CAACC,KAAJ;AACH,KAfkB;;AAEfC,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AAEA,SAAKI,KAAL,GAAa;AACTO,MAAAA,IAAI,EAAE,KAAKX,KAAL,CAAWY,QAAX,CAAoBR,KAApB,CAA0BO,IADvB;AAETE,MAAAA,OAAO,EAAEN,GAAG,CAACO,eAAJ,CAAoB,KAAKd,KAAL,CAAWY,QAAX,CAAoBR,KAApB,CAA0BO,IAA9C,CAFA;AAGTN,MAAAA,MAAM,EAAE,EAHC;AAITU,MAAAA,YAAY,EAAE;AAJL,KAAb;AAMH;;AAODC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,MAAM,GAAG;AAAEC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAAX,KAAf;AACA,QAAIC,EAAE,GAAG,IAAIC,QAAJ,EAAT;AAEAD,IAAAA,EAAE,CAACE,MAAH,CAAU,MAAV,EAAkB,KAAKjB,KAAL,CAAWO,IAA7B;AAEAf,IAAAA,KAAK,CAAC0B,IAAN,CAAW,4BAAX,EAAyCH,EAAzC,EAA6CF,MAA7C,EACGM,IADH,CACSC,QAAD,IAAc;AAClBf,MAAAA,OAAO,CAACC,GAAR,CAAYc,QAAQ,CAACtB,IAArB;AACA,UAAIuB,SAAS,GAAGD,QAAQ,CAACtB,IAAzB;AACA,WAAKwB,QAAL,CAAc;AAAErB,QAAAA,MAAM,EAAEmB,QAAQ,CAACtB;AAAnB,OAAd;AACD,KALH,EAMGyB,KANH,CAMSC,KAAK,IAAI;AACZnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AACH,KARH;AASH;;AAIDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAZ;AAAA,8BACI;AAAK,QAAA,GAAG,EAAC,MAAT;AACI,QAAA,GAAG,EAAE,KAAK1B,KAAL,CAAWS;AADpB;AAAA;AAAA;AAAA;AAAA,cADJ,EAIK,KAAKT,KAAL,CAAWC,MAAX,gBAAoB;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBAAoC,KAAKD,KAAL,CAAWC;AAA/C;AAAA;AAAA;AAAA;AAAA,cAApB,gBAAmF,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAJxF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA/CiD","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\nimport OcrResultSkeleton from '../../components/OcrResultSkeleton/OcrResultSkeleton'\n\nimport './ScanResultPage.css'\n\nexport default class ScanResultPage extends Component {\n\n    constructor(props) {\n        super(props)\n        console.log(props)\n\n        this.state = {\n            file: this.props.location.state.file,\n            preview: URL.createObjectURL(this.props.location.state.file),\n            result: \"\",\n            downloadLink: \"\"\n        }\n    }\n\n    createTxtFile = () => {\n        const data = new Blob([this.state.result], {type: 'text/plain'})\n        URL.revok\n    }\n\n    componentDidMount() {\n        const config = { headers: { 'Content-Type': 'multipart/form-data' } };\n        let fd = new FormData();\n\n        fd.append('file', this.state.file)\n\n        axios.post('http://127.0.0.1:8000/ocr/', fd, config)\n          .then((response) => {\n            console.log(response.data);\n            let ocrResult = response.data;\n            this.setState({ result: response.data})\n          })\n          .catch(error => {\n              console.log(error);\n          })\n    }\n\n    \n\n    render() {\n        return (\n            <div style={{display: 'flex'}}>\n                <img alt=\"lele\"\n                    src={this.state.preview}\n                    />\n                {this.state.result ? <div className=\"display-linebreak\">{this.state.result}</div> : <OcrResultSkeleton/>} \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}