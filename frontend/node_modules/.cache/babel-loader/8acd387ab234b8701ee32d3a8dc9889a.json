{"ast":null,"code":"var _jsxFileName = \"/Users/ecem/Documents/INTERNSHIP/2021 SUMMER/JOTFORM/ocr-logo-detection/frontend/src/pages/ScanResultPage/ScanResultPage.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button } from 'primereact/button';\nimport OcrResultSkeleton from '../../components/OcrResultSkeleton/OcrResultSkeleton';\nimport './ScanResultPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ScanResultPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getOcrResult = () => {};\n\n    this.createTxtFile = () => {\n      const data = new Blob([this.state.result], {\n        type: 'text/plain'\n      });\n      URL.revokeObjectURL(this.state.downloadLink);\n      this.setState({\n        downloadLink: URL.createObjectURL(data)\n      });\n      console.log(this.state.downloadLink);\n    };\n\n    console.log(props);\n    this.state = {\n      file: this.props.location.state.file,\n      preview: URL.createObjectURL(this.props.location.state.file),\n      result: \"\",\n      downloadLink: \"\"\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"lele\",\n        src: this.state.preview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), this.state.result ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display-linebreak\",\n        children: this.state.result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(OcrResultSkeleton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 101\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.createTxtFile,\n        children: \"lele\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        download: \"lele.txt\",\n        href: this.state.downloadLink,\n        children: \"link is here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ecem/Documents/INTERNSHIP/2021 SUMMER/JOTFORM/ocr-logo-detection/frontend/src/pages/ScanResultPage/ScanResultPage.js"],"names":["React","Component","axios","Button","OcrResultSkeleton","ScanResultPage","constructor","props","getOcrResult","createTxtFile","data","Blob","state","result","type","URL","revokeObjectURL","downloadLink","setState","createObjectURL","console","log","file","location","preview","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,OAAOC,iBAAP,MAA8B,sDAA9B;AAEA,OAAO,sBAAP;;AAEA,eAAe,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAElDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAiBnBC,YAjBmB,GAiBJ,MAAM,CAEpB,CAnBkB;;AAAA,SAsBnBC,aAtBmB,GAsBH,MAAM;AAClB,YAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAAC,KAAKC,KAAL,CAAWC,MAAZ,CAAT,EAA8B;AAACC,QAAAA,IAAI,EAAE;AAAP,OAA9B,CAAb;AACAC,MAAAA,GAAG,CAACC,eAAJ,CAAoB,KAAKJ,KAAL,CAAWK,YAA/B;AACA,WAAKC,QAAL,CAAc;AAACD,QAAAA,YAAY,EAAEF,GAAG,CAACI,eAAJ,CAAoBT,IAApB;AAAf,OAAd;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWK,YAAvB;AACH,KA3BkB;;AAEfG,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AAEA,SAAKK,KAAL,GAAa;AACTU,MAAAA,IAAI,EAAE,KAAKf,KAAL,CAAWgB,QAAX,CAAoBX,KAApB,CAA0BU,IADvB;AAETE,MAAAA,OAAO,EAAET,GAAG,CAACI,eAAJ,CAAoB,KAAKZ,KAAL,CAAWgB,QAAX,CAAoBX,KAApB,CAA0BU,IAA9C,CAFA;AAGTT,MAAAA,MAAM,EAAE,EAHC;AAITI,MAAAA,YAAY,EAAE;AAJL,KAAb;AAMH;;AAEDQ,EAAAA,iBAAiB,GAAG,CAEnB;;AAmBDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAK,QAAA,GAAG,EAAC,MAAT;AACI,QAAA,GAAG,EAAE,KAAKd,KAAL,CAAWY;AADpB;AAAA;AAAA;AAAA;AAAA,cADJ,EAIK,KAAKZ,KAAL,CAAWC,MAAX,gBAAoB;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBAAoC,KAAKD,KAAL,CAAWC;AAA/C;AAAA;AAAA;AAAA;AAAA,cAApB,gBAAmF,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAJxF,eAKI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKJ,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAG,QAAA,QAAQ,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAE,KAAKG,KAAL,CAAWK,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AA9CiD","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\nimport { Button } from 'primereact/button';\n\nimport OcrResultSkeleton from '../../components/OcrResultSkeleton/OcrResultSkeleton'\n\nimport './ScanResultPage.css'\n\nexport default class ScanResultPage extends Component {\n\n    constructor(props) {\n        super(props)\n        console.log(props)\n\n        this.state = {\n            file: this.props.location.state.file,\n            preview: URL.createObjectURL(this.props.location.state.file),\n            result: \"\",\n            downloadLink: \"\"\n        }\n    }\n\n    componentDidMount() {\n        \n    }\n\n\n    getOcrResult = () => {\n\n    }\n\n\n    createTxtFile = () => {\n        const data = new Blob([this.state.result], {type: 'text/plain'})\n        URL.revokeObjectURL(this.state.downloadLink)\n        this.setState({downloadLink: URL.createObjectURL(data)})\n        console.log(this.state.downloadLink)\n    }\n\n    \n\n    \n\n    render() {\n        return (\n            <div>\n                <img alt=\"lele\"\n                    src={this.state.preview}\n                    />\n                {this.state.result ? <div className=\"display-linebreak\">{this.state.result}</div> : <OcrResultSkeleton/>}\n                <Button onClick={this.createTxtFile}>lele</Button>\n                <a download='lele.txt' href={this.state.downloadLink}>link is here</a>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}