{"ast":null,"code":"var _jsxFileName = \"/Users/ecem/Documents/INTERNSHIP/2021 SUMMER/JOTFORM/ocr-logo-detection/frontend/src/components/SaveOcrResultButton/SaveOcrResultButton.js\";\nimport React, { Component } from 'react';\nimport { Dropdown } from 'primereact/dropdown';\nimport './SaveOcrResultButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SaveOcrResultButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelectionChange = e => {\n      this.createFile(e.value.type, e.value.extension); // this.downloadFile(e.value.extension)\n    };\n\n    this.createFile = (fileType, fileExtension) => {\n      const data = new Blob([\"fghhkjg\"], {\n        type: fileType\n      });\n      URL.revokeObjectURL(this.state.downloadLink);\n      this.setState({\n        downloadLink: URL.createObjectURL(data)\n      });\n      element.href = URL.createObjectURL(file);\n      element.download = \"myFile.txt\";\n      document.body.appendChild(element); // Required for this to work in FireFox\n\n      element.click();\n    };\n\n    this.downloadFile = fileExtension => {\n      const a = document.createElement('a');\n      a.href = this.state.downloadLink;\n      a.download = \"ocrresult\".concat(fileExtension);\n      document.body.appendChild(a);\n      a.click();\n    };\n\n    this.items = [{\n      label: 'Plain Text (txt)',\n      extension: '.txt',\n      type: 'text/plain'\n    }, {\n      label: 'Portable Document (pdf)',\n      extension: '.pdf',\n      type: 'application/pdf'\n    }, {\n      label: 'Microsoft Word (docx)',\n      extension: '.docx',\n      type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    }, {\n      label: 'OpenOffice (odf)',\n      extension: '.odf',\n      type: 'application/vnd.oasis.opendocument.text'\n    }];\n    this.state = {\n      downloadLink: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        placeholder: \"Download\",\n        options: this.items,\n        optionlabel: \"label\",\n        onChange: this.onSelectionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ecem/Documents/INTERNSHIP/2021 SUMMER/JOTFORM/ocr-logo-detection/frontend/src/components/SaveOcrResultButton/SaveOcrResultButton.js"],"names":["React","Component","Dropdown","SaveOcrResultButton","constructor","props","onSelectionChange","e","createFile","value","type","extension","fileType","fileExtension","data","Blob","URL","revokeObjectURL","state","downloadLink","setState","createObjectURL","element","href","file","download","document","body","appendChild","click","downloadFile","a","createElement","concat","items","label","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAO,2BAAP;;AAIA,eAAe,MAAMC,mBAAN,SAAkCF,SAAlC,CAA4C;AAEvDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA+BnBC,iBA/BmB,GA+BEC,CAAD,IAAO;AACvB,WAAKC,UAAL,CAAgBD,CAAC,CAACE,KAAF,CAAQC,IAAxB,EAA8BH,CAAC,CAACE,KAAF,CAAQE,SAAtC,EADuB,CAEvB;AACH,KAlCkB;;AAAA,SAoCnBH,UApCmB,GAoCN,CAACI,QAAD,EAAWC,aAAX,KAA6B;AACtC,YAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAAC,SAAD,CAAT,EAAsB;AAACL,QAAAA,IAAI,EAAEE;AAAP,OAAtB,CAAb;AACAI,MAAAA,GAAG,CAACC,eAAJ,CAAoB,KAAKC,KAAL,CAAWC,YAA/B;AACA,WAAKC,QAAL,CAAc;AAACD,QAAAA,YAAY,EAAEH,GAAG,CAACK,eAAJ,CAAoBP,IAApB;AAAf,OAAd;AAGAQ,MAAAA,OAAO,CAACC,IAAR,GAAeP,GAAG,CAACK,eAAJ,CAAoBG,IAApB,CAAf;AACAF,MAAAA,OAAO,CAACG,QAAR,GAAmB,YAAnB;AACAC,MAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BN,OAA1B,EARsC,CAQF;;AACpCA,MAAAA,OAAO,CAACO,KAAR;AACH,KA9CkB;;AAAA,SAgDnBC,YAhDmB,GAgDHjB,aAAD,IAAmB;AAC9B,YAAMkB,CAAC,GAAGL,QAAQ,CAACM,aAAT,CAAuB,GAAvB,CAAV;AAGAD,MAAAA,CAAC,CAACR,IAAF,GAAS,KAAKL,KAAL,CAAWC,YAApB;AACAY,MAAAA,CAAC,CAACN,QAAF,GAAa,YAAYQ,MAAZ,CAAmBpB,aAAnB,CAAb;AAEAa,MAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BG,CAA1B;AACAA,MAAAA,CAAC,CAACF,KAAF;AAEH,KA1DkB;;AAGf,SAAKK,KAAL,GAAa,CACT;AACIC,MAAAA,KAAK,EAAE,kBADX;AAEIxB,MAAAA,SAAS,EAAE,MAFf;AAGID,MAAAA,IAAI,EAAE;AAHV,KADS,EAMT;AACIyB,MAAAA,KAAK,EAAE,yBADX;AAEIxB,MAAAA,SAAS,EAAE,MAFf;AAGID,MAAAA,IAAI,EAAE;AAHV,KANS,EAWT;AACIyB,MAAAA,KAAK,EAAE,uBADX;AAEIxB,MAAAA,SAAS,EAAE,OAFf;AAGID,MAAAA,IAAI,EAAE;AAHV,KAXS,EAgBT;AACIyB,MAAAA,KAAK,EAAE,kBADX;AAEIxB,MAAAA,SAAS,EAAE,MAFf;AAGID,MAAAA,IAAI,EAAE;AAHV,KAhBS,CAAb;AAuBA,SAAKQ,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AADL,KAAb;AAGH;;AAgCDiB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,WAAW,EAAC,UAAtB;AAAiC,QAAA,OAAO,EAAE,KAAKF,KAA/C;AAAsD,QAAA,WAAW,EAAC,OAAlE;AAA0E,QAAA,QAAQ,EAAE,KAAK5B;AAAzF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AArEsD","sourcesContent":["import React, { Component } from 'react'\n\nimport { Dropdown } from 'primereact/dropdown';\n\nimport './SaveOcrResultButton.css'\n\n\n\nexport default class SaveOcrResultButton extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.items = [\n            {\n                label: 'Plain Text (txt)',\n                extension: '.txt',\n                type: 'text/plain',\n            },\n            {\n                label: 'Portable Document (pdf)',\n                extension: '.pdf',\n                type: 'application/pdf'\n            },\n            {\n                label: 'Microsoft Word (docx)',\n                extension: '.docx',\n                type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n            },\n            {\n                label: 'OpenOffice (odf)',\n                extension: '.odf',\n                type: 'application/vnd.oasis.opendocument.text'\n            },\n        ];\n\n        this.state = {\n            downloadLink: \"\",\n        }\n    }\n\n    onSelectionChange = (e) => {\n        this.createFile(e.value.type, e.value.extension)\n        // this.downloadFile(e.value.extension)\n    }\n\n    createFile = (fileType, fileExtension) => {\n        const data = new Blob([\"fghhkjg\"], {type: fileType})\n        URL.revokeObjectURL(this.state.downloadLink)\n        this.setState({downloadLink: URL.createObjectURL(data)})\n\n        \n        element.href = URL.createObjectURL(file);\n        element.download = \"myFile.txt\";\n        document.body.appendChild(element); // Required for this to work in FireFox\n        element.click()\n    }\n\n    downloadFile = (fileExtension) => {\n        const a = document.createElement('a');\n        \n\n        a.href = this.state.downloadLink;\n        a.download = \"ocrresult\".concat(fileExtension);\n\n        document.body.appendChild(a);\n        a.click();\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Dropdown placeholder=\"Download\" options={this.items} optionlabel=\"label\" onChange={this.onSelectionChange} />\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}