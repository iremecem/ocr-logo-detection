{"ast":null,"code":"var _jsxFileName = \"/Users/ecem/Documents/INTERNSHIP/2021 SUMMER/JOTFORM/ocr-logo-detection/frontend/src/components/UploadImage/UploadImage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport upload_logo from \"../../assets/images/add_file_v2.svg\";\nimport './UploadImage.css';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport Dropzone, { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadImage(props) {\n  _s();\n\n  const history = useHistory();\n  const [fileName, setFileName] = useState(\"no file selected\");\n  const [files, setFiles] = useState([]);\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    maxFiles: 1,\n    accept: 'image/*',\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n      acceptedFiles.forEach(file => {\n        setFileName(file.name);\n        const reader = new FileReader();\n\n        reader.onabort = () => console.log('file reading was aborted');\n\n        reader.onerror = () => console.log('file reading has failed');\n\n        reader.onload = () => {\n          // Do whatever you want with the file contents\n          const binaryStr = reader.result;\n          console.log(binaryStr);\n        };\n\n        reader.readAsArrayBuffer(file);\n      });\n    },\n    onDropRejected: () => {\n      console.log('file dropping was rejected');\n    }\n  });\n  const thumbs = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: file.preview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this)\n  }, file.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this));\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n\n  const handleClick = () => {\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    let fd = new FormData();\n    fd.append('file', files[0]);\n    axios.post('http://127.0.0.1:8000/ocr/', fd, config).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n    history.push({\n      pathname: '/result',\n      state: {\n        file: files[0],\n        formData: fd\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-area\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n            className: 'dropzone'\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"upload-image-logo\",\n            src: upload_logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontWeight: 'bold',\n              fontSize: '16px'\n            },\n            children: \"Drag 'n' drop some files here, or click to select files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ln-selection-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scan-button-container\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"scan-button\",\n        onClick: handleClick,\n        children: \"Scan Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: thumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UploadImage, \"9cAHyqFF01DI9BH1Re6zIIGsmLg=\", false, function () {\n  return [useHistory, useDropzone];\n});\n\n_c = UploadImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"sources":["/Users/ecem/Documents/INTERNSHIP/2021 SUMMER/JOTFORM/ocr-logo-detection/frontend/src/components/UploadImage/UploadImage.js"],"names":["React","useEffect","useState","useHistory","axios","Button","Dropdown","Dropzone","useDropzone","UploadImage","props","history","fileName","setFileName","files","setFiles","acceptedFiles","getRootProps","getInputProps","maxFiles","accept","onDrop","map","file","Object","assign","preview","URL","createObjectURL","forEach","name","reader","FileReader","onabort","console","log","onerror","onload","binaryStr","result","readAsArrayBuffer","onDropRejected","thumbs","revokeObjectURL","handleClick","config","headers","fd","FormData","append","post","then","response","catch","error","push","pathname","state","formData","className","upload_logo","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport axios from 'axios';\nimport upload_logo from '../../assets/images/add_file_v2.svg';\nimport './UploadImage.css'\n\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\n\nimport Dropzone, {useDropzone} from 'react-dropzone';\n\n\nexport default function UploadImage(props) {\n\n    const history = useHistory();\n\n    const [fileName, setFileName] = useState(\"no file selected\")\n\n    const [files, setFiles] = useState([]);\n    const {acceptedFiles, getRootProps, getInputProps} = useDropzone({\n        maxFiles: 1,\n        accept: 'image/*',\n        onDrop: acceptedFiles => {\n        setFiles(acceptedFiles.map(file => Object.assign(file, {\n            preview: URL.createObjectURL(file)\n        })));\n        acceptedFiles.forEach((file) => {\n            setFileName(file.name)\n            const reader = new FileReader()\n\n            reader.onabort = () => console.log('file reading was aborted')\n            reader.onerror = () => console.log('file reading has failed')\n            reader.onload = () => {\n            // Do whatever you want with the file contents\n                const binaryStr = reader.result\n                console.log(binaryStr)\n            }\n            reader.readAsArrayBuffer(file)\n        });\n        },\n        onDropRejected: () => {\n          console.log('file dropping was rejected')\n        }\n    }\n    );\n\n    const thumbs = files.map(file => (\n        <div  key={file.name}>\n          <div >\n            <img\n              src={file.preview}\n            />\n          </div>\n        </div>\n      ));\n\n      useEffect(() => () => {\n        // Make sure to revoke the data uris to avoid memory leaks\n        files.forEach(file => URL.revokeObjectURL(file.preview));\n      }, [files]);\n\n      const handleClick = () => {\n        const config = { headers: { 'Content-Type': 'multipart/form-data' } };\n        let fd = new FormData();\n\n        fd.append('file', files[0])\n\n        axios.post('http://127.0.0.1:8000/ocr/', fd, config)\n          .then((response) => {\n            console.log(response);\n          })\n          .catch(error => {\n              console.log(error);\n          })\n\n          history.push({\n            pathname: '/result',\n            state: { file: files[0], formData: fd }\n          })\n      }\n\n    \n    return (\n        <div className=\"upload-container\">\n            <div className=\"upload-area\">\n            <section>\n                <div {...getRootProps({className: 'dropzone'})}>\n                    <input {...getInputProps()} />\n                    <img className=\"upload-image-logo\" src={upload_logo}></img>\n                    <p style={{fontWeight: 'bold', fontSize: '16px'}}>Drag 'n' drop some files here, or click to select files</p>\n                    <p>{fileName}</p>\n                </div>\n            </section> \n            </div>\n            <div className=\"ln-selection-container\">\n            </div>\n            <div className=\"scan-button-container\">\n                <Button className=\"scan-button\" onClick={handleClick}>Scan Document</Button>\n            </div>\n            <aside>\n                {thumbs}\n            </aside>\n        </div>\n        )\n    }\n\n"]},"metadata":{},"sourceType":"module"}