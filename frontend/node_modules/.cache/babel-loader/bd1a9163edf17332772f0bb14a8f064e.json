{"ast":null,"code":"var _jsxFileName = \"/Users/ecem/Desktop/ocr-logo-detection/frontend/src/pages/ScanResultPage/ScanResultPage.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button } from 'primereact/button';\nimport { SplitButton } from 'primereact/splitbutton';\nimport { Dropdown } from 'primereact/dropdown';\nimport OcrResultSkeleton from '../../components/OcrResultSkeleton/OcrResultSkeleton';\nimport { ButtonItems } from './ButtonItems';\nimport './ScanResultPage.css';\nimport SaveOcrResultButton from '../../components/SaveOcrResultButton/SaveOcrResultButton.js';\nimport LogoResultSkeleton from '../../components/LogoResultSkeleton/LogoResultSkeleton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ScanResultPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getOcrResult = () => {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      let fd = new FormData();\n      fd.append('file', this.state.file);\n      axios.post('http://127.0.0.1:8000/ocr/', fd, config).then(response => {\n        console.log(response.data);\n        let ocrResult = response.data;\n        this.setState({\n          ocrResult: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      }).h;\n      axios.post('http://127.0.0.1:8000/logo/', fd, config).then(response => {\n        console.log(response.data);\n        this.setState({\n          logoImage: response.data.image,\n          companyName: response.data.company_name\n        });\n      }).catch(error => {\n        console.log(error);\n      }).then(() => {\n        let data = {\n          \"4\": \"bu company\",\n          \"3\": this.state.ocrResult\n        };\n        axios.post(\"https://api.jotform.com/form/212221991729054/submissions?apikey=589e0c84d66ed72d07f81a78e3153916\", data);\n      });\n    };\n\n    this.createTxtFile = () => {\n      const data = new Blob([this.state.result], {\n        type: 'text/plain'\n      });\n      URL.revokeObjectURL(this.state.downloadLink);\n      this.setState({\n        downloadLink: URL.createObjectURL(data)\n      });\n      console.log(this.state.downloadLink);\n    };\n\n    this.createWordxFile = () => {\n      const data = new Blob([this.state.result], {\n        type: 'application/msword'\n      });\n      URL.revokeObjectURL(this.state.downloadLink);\n      this.setState({\n        downloadLink: URL.createObjectURL(data)\n      });\n      console.log(this.state.downloadLink);\n    };\n\n    this.createWordFile = () => {\n      const data = new Blob([this.state.result], {\n        type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n      });\n      URL.revokeObjectURL(this.state.downloadLink);\n      this.setState({\n        downloadLink: URL.createObjectURL(data)\n      });\n      console.log(this.state.downloadLink);\n    };\n\n    console.log(props);\n    this.state = {\n      file: this.props.location.state.file,\n      preview: URL.createObjectURL(this.props.location.state.file),\n      ocrResult: \"\",\n      downloadLink: \"\",\n      downloadName: \"\",\n      downloadType: \"\",\n      companyName: \"\",\n      logoImage: \"\"\n    };\n    this.items = [{\n      label: 'Plain Text (txt)',\n      icon: 'pi pi-refresh',\n      command: () => {\n        this.toast.show({\n          severity: 'success',\n          summary: 'Updated',\n          detail: 'Data Updated'\n        });\n      }\n    }, {\n      label: 'Portable Document (pdf)',\n      icon: 'pi pi-times',\n      command: () => {\n        this.toast.show({\n          severity: 'success',\n          summary: 'Delete',\n          detail: 'Data Deleted'\n        });\n      }\n    }, {\n      label: 'Microsoft Word (docx)',\n      icon: 'pi pi-refresh',\n      command: () => {\n        this.toast.show({\n          severity: 'success',\n          summary: 'Updated',\n          detail: 'Data Updated'\n        });\n      }\n    }, {\n      label: 'OpenOffice (odf)',\n      icon: 'pi pi-refresh',\n      command: () => {\n        this.toast.show({\n          severity: 'success',\n          summary: 'Updated',\n          detail: 'Data Updated'\n        });\n      }\n    }];\n  }\n\n  componentDidMount() {\n    this.getOcrResult();\n  }\n\n  render() {\n    var logoImage = 'data:image/jpeg;base64,' + this.state.logoImage;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-page-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-elements\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: this.state.logoImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"image\",\n            alt: \"image\",\n            src: logoImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 49\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"image\",\n            alt: \"image\",\n            src: this.state.preview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logo-result-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ocr-header\",\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"header-divider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), this.state.companyName ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", this.state.companyName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 55\n            }, this) : /*#__PURE__*/_jsxDEV(LogoResultSkeleton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 94\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ocr-result-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ocr-header\",\n              children: \"Mail Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"header-divider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), this.state.ocrResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"display-linebreak\",\n              children: this.state.ocrResult\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 53\n            }, this) : /*#__PURE__*/_jsxDEV(OcrResultSkeleton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 119\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"save-button\",\n              children: /*#__PURE__*/_jsxDEV(SaveOcrResultButton, {\n                ocrResult: this.state.ocrResult,\n                fileName: this.state.file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ecem/Desktop/ocr-logo-detection/frontend/src/pages/ScanResultPage/ScanResultPage.js"],"names":["React","Component","axios","Button","SplitButton","Dropdown","OcrResultSkeleton","ButtonItems","SaveOcrResultButton","LogoResultSkeleton","ScanResultPage","constructor","props","getOcrResult","config","headers","fd","FormData","append","state","file","post","then","response","console","log","data","ocrResult","setState","catch","error","h","logoImage","image","companyName","company_name","createTxtFile","Blob","result","type","URL","revokeObjectURL","downloadLink","createObjectURL","createWordxFile","createWordFile","location","preview","downloadName","downloadType","items","label","icon","command","toast","show","severity","summary","detail","componentDidMount","render","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\nimport { Button } from 'primereact/button';\nimport { SplitButton } from 'primereact/splitbutton';\nimport { Dropdown } from 'primereact/dropdown';\n\nimport OcrResultSkeleton from '../../components/OcrResultSkeleton/OcrResultSkeleton'\nimport { ButtonItems } from './ButtonItems'\n\nimport './ScanResultPage.css'\n\nimport SaveOcrResultButton from '../../components/SaveOcrResultButton/SaveOcrResultButton.js'\nimport LogoResultSkeleton from '../../components/LogoResultSkeleton/LogoResultSkeleton';\n\nexport default class ScanResultPage extends Component {\n\n    constructor(props) {\n        super(props)\n        console.log(props)\n\n        this.state = {\n            file: this.props.location.state.file,\n            preview: URL.createObjectURL(this.props.location.state.file),\n            ocrResult: \"\",\n            downloadLink: \"\",\n            downloadName: \"\",\n            downloadType: \"\",\n            companyName: \"\",\n            logoImage: \"\"\n        }\n\n        this.items = [{\n            label: 'Plain Text (txt)',\n            icon: 'pi pi-refresh',\n            command: () => {\n                this.toast.show({severity:'success', summary:'Updated', detail:'Data Updated'});\n            }\n        },\n        {\n            label: 'Portable Document (pdf)',\n            icon: 'pi pi-times',\n            command: () => {\n                this.toast.show({ severity: 'success', summary: 'Delete', detail: 'Data Deleted' });\n            }\n        },\n        {\n            label: 'Microsoft Word (docx)',\n            icon: 'pi pi-refresh',\n            command: () => {\n                this.toast.show({severity:'success', summary:'Updated', detail:'Data Updated'});\n            }\n        },\n        {\n            label: 'OpenOffice (odf)',\n            icon: 'pi pi-refresh',\n            command: () => {\n                this.toast.show({severity:'success', summary:'Updated', detail:'Data Updated'});\n            }\n        }];\n    }\n\n    componentDidMount() {\n        this.getOcrResult();\n    }\n\n\n    getOcrResult = () => {\n        const config = { headers: { 'Content-Type': 'multipart/form-data' } };\n        let fd = new FormData();\n\n        fd.append('file', this.state.file)\n\n        \n\n        axios.post('http://127.0.0.1:8000/ocr/', fd, config)\n          .then((response) => {\n            console.log(response.data);\n            let ocrResult = response.data;\n            this.setState({ ocrResult: response.data})\n          })\n          .catch(error => {\n              console.log(error);\n          }).h\n          axios.post('http://127.0.0.1:8000/logo/', fd, config)\n          .then((response) => {\n            console.log(response.data);\n            this.setState({logoImage: response.data.image, companyName: response.data.company_name});\n          })\n          .catch(error => {\n              console.log(error);\n          })\n          .then(() => {\n              let data = {\"4\": \"bu company\",\n                          \"3\": this.state.ocrResult}\n              axios.post(\"https://api.jotform.com/form/212221991729054/submissions?apikey=589e0c84d66ed72d07f81a78e3153916\", data)\n          })\n    }\n\n\n    createTxtFile = () => {\n        const data = new Blob([this.state.result], {type: 'text/plain'})\n        URL.revokeObjectURL(this.state.downloadLink)\n        this.setState({downloadLink: URL.createObjectURL(data)})\n        console.log(this.state.downloadLink)\n    }\n\n    createWordxFile = () => {\n        const data = new Blob([this.state.result], {type: 'application/msword'})\n        URL.revokeObjectURL(this.state.downloadLink)\n        this.setState({downloadLink: URL.createObjectURL(data)})\n        console.log(this.state.downloadLink)\n    }\n\n    createWordFile = () => {\n        const data = new Blob([this.state.result], {type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'})\n        URL.revokeObjectURL(this.state.downloadLink)\n        this.setState({downloadLink: URL.createObjectURL(data)})\n        console.log(this.state.downloadLink)\n    }\n\n    \n\n    render() {\n\n        var logoImage = 'data:image/jpeg;base64,' + this.state.logoImage\n\n        return (\n            <div className=\"result-page-container\">\n                <div className=\"result-elements\">\n                    <div className=\"image-container\">\n                        {this.state.logoImage ? <img className=\"image\"\n                            alt=\"image\"\n                            src={logoImage}\n                        /> : <img className=\"image\"\n                        alt=\"image\"\n                        src={this.state.preview}\n                    />}\n                        \n                    </div>\n                    <div className=\"results-column\">\n                        <div className=\"logo-result-container\">\n                            <div className=\"ocr-header\">Company Name</div>\n                            <hr className=\"header-divider\"></hr>\n                            {this.state.companyName ? <div> {this.state.companyName}</div> : <LogoResultSkeleton/>}\n                        </div>\n                        <div className=\"ocr-result-container\">\n                            <div className=\"ocr-header\">Mail Content</div>\n                            <hr className=\"header-divider\"></hr>\n                            {this.state.ocrResult ? <div className=\"display-linebreak\">{this.state.ocrResult}</div> : <OcrResultSkeleton/>}\n                            <div className=\"save-button\"> \n                                <SaveOcrResultButton ocrResult={this.state.ocrResult} fileName={this.state.file.name}/>\n                            </div>\n                        </div>\n                    </div>\n                {/* <Button onClick={this.createWordFile}>lele</Button>\n                <a download='lele.docx' href={this.state.downloadLink}>link is here</a> */}\n                \n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}