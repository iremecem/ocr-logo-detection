{"ast":null,"code":"var _jsxFileName = \"/Users/ecem/Documents/INTERNSHIP/2021 SUMMER/JOTFORM/ocr-logo-detection/frontend/src/components/SaveOcrResultButton/SaveOcrResultButton.js\";\nimport React, { Component } from 'react';\nimport { Dropdown } from 'primereact/dropdown';\nimport './SaveOcrResultButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SaveOcrResultButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelectionChange = e => {\n      this.createFile(e.value);\n      this.downloadFile();\n    };\n\n    this.createFile = fileParams => {\n      const data = new Blob([\"this.state.result\"], {\n        type: fileParams.type\n      });\n      window.URL.revokeObjectURL(this.state.downloadLink);\n      this.setState({\n        downloadLink: window.URL.createObjectURL(data)\n      });\n    };\n\n    this.downloadFile = () => {};\n\n    this.items = [{\n      label: 'Plain Text (txt)',\n      extension: '.txt',\n      type: 'text/plain'\n    }, {\n      label: 'Portable Document (pdf)',\n      extension: '.pdf',\n      type: 'application/pdf'\n    }, {\n      label: 'Microsoft Word (docx)',\n      extension: '.docx',\n      type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    }, {\n      label: 'OpenOffice (odf)',\n      extension: '.odf',\n      type: 'application/vnd.oasis.opendocument.text'\n    }];\n    this.state = {\n      downloadLink: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        placeholder: \"Download\",\n        options: this.items,\n        optionlabel: \"label\",\n        onChange: this.onSelectionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ecem/Documents/INTERNSHIP/2021 SUMMER/JOTFORM/ocr-logo-detection/frontend/src/components/SaveOcrResultButton/SaveOcrResultButton.js"],"names":["React","Component","Dropdown","SaveOcrResultButton","constructor","props","onSelectionChange","e","createFile","value","downloadFile","fileParams","data","Blob","type","window","URL","revokeObjectURL","state","downloadLink","setState","createObjectURL","items","label","extension","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAO,2BAAP;;AAIA,eAAe,MAAMC,mBAAN,SAAkCF,SAAlC,CAA4C;AAEvDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA+BnBC,iBA/BmB,GA+BEC,CAAD,IAAO;AACvB,WAAKC,UAAL,CAAgBD,CAAC,CAACE,KAAlB;AACA,WAAKC,YAAL;AACH,KAlCkB;;AAAA,SAoCnBF,UApCmB,GAoCLG,UAAD,IAAgB;AACzB,YAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAAC,mBAAD,CAAT,EAAgC;AAACC,QAAAA,IAAI,EAAEH,UAAU,CAACG;AAAlB,OAAhC,CAAb;AACAC,MAAAA,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2B,KAAKC,KAAL,CAAWC,YAAtC;AACA,WAAKC,QAAL,CAAc;AAACD,QAAAA,YAAY,EAAEJ,MAAM,CAACC,GAAP,CAAWK,eAAX,CAA2BT,IAA3B;AAAf,OAAd;AACH,KAxCkB;;AAAA,SA0CnBF,YA1CmB,GA0CJ,MAAM,CAEpB,CA5CkB;;AAGf,SAAKY,KAAL,GAAa,CACT;AACIC,MAAAA,KAAK,EAAE,kBADX;AAEIC,MAAAA,SAAS,EAAE,MAFf;AAGIV,MAAAA,IAAI,EAAE;AAHV,KADS,EAMT;AACIS,MAAAA,KAAK,EAAE,yBADX;AAEIC,MAAAA,SAAS,EAAE,MAFf;AAGIV,MAAAA,IAAI,EAAE;AAHV,KANS,EAWT;AACIS,MAAAA,KAAK,EAAE,uBADX;AAEIC,MAAAA,SAAS,EAAE,OAFf;AAGIV,MAAAA,IAAI,EAAE;AAHV,KAXS,EAgBT;AACIS,MAAAA,KAAK,EAAE,kBADX;AAEIC,MAAAA,SAAS,EAAE,MAFf;AAGIV,MAAAA,IAAI,EAAE;AAHV,KAhBS,CAAb;AAuBA,SAAKI,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AADL,KAAb;AAGH;;AAkBDM,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,WAAW,EAAC,UAAtB;AAAiC,QAAA,OAAO,EAAE,KAAKH,KAA/C;AAAsD,QAAA,WAAW,EAAC,OAAlE;AAA0E,QAAA,QAAQ,EAAE,KAAKhB;AAAzF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAvDsD","sourcesContent":["import React, { Component } from 'react'\n\nimport { Dropdown } from 'primereact/dropdown';\n\nimport './SaveOcrResultButton.css'\n\n\n\nexport default class SaveOcrResultButton extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.items = [\n            {\n                label: 'Plain Text (txt)',\n                extension: '.txt',\n                type: 'text/plain',\n            },\n            {\n                label: 'Portable Document (pdf)',\n                extension: '.pdf',\n                type: 'application/pdf'\n            },\n            {\n                label: 'Microsoft Word (docx)',\n                extension: '.docx',\n                type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n            },\n            {\n                label: 'OpenOffice (odf)',\n                extension: '.odf',\n                type: 'application/vnd.oasis.opendocument.text'\n            },\n        ];\n\n        this.state = {\n            downloadLink: \"\",\n        }\n    }\n\n    onSelectionChange = (e) => {\n        this.createFile(e.value)\n        this.downloadFile()\n    }\n\n    createFile = (fileParams) => {\n        const data = new Blob([\"this.state.result\"], {type: fileParams.type})\n        window.URL.revokeObjectURL(this.state.downloadLink)\n        this.setState({downloadLink: window.URL.createObjectURL(data)})\n    }\n\n    downloadFile = () => {\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Dropdown placeholder=\"Download\" options={this.items} optionlabel=\"label\" onChange={this.onSelectionChange} />\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}